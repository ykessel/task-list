# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: task-list

    strategy:
      matrix:
        node-version: [16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
   
    # Cargar cache de node_modules, para reducir tiempo de instalación en próximas ejecuciones
    - name: Cache node modules
      id: node-cache # Id del cache
      uses: actions/cache@v1
      with:
        path: node_modules
        # Se usará el mismo cache siempre y cuando sea el mismo sistema operativo y no existan cambios en el archivo package-lock
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

    # Instalar dependencias
    - name: Install dependencies
      # No ejecutar si se obtuvo node_modules de cache
      if: steps.node-cache.outputs.cache-hit != 'true' 
      run: npm install   
       
    # Generar compilación de producción
    - name: Run Build command
      run: npm run build:prod
    # Ejecutar pruebas unitarias
    - name: Run Unit tests
      run: npm run test:prod
